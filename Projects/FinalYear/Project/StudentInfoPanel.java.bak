package Project;
import java.awt.*;
import java.awt.event.*;
import javax.swing.*;
import javax.swing.event.*;
import javax.swing.border.*;
//import Project.controls.*;
import MyControls.*;
import java.util.*;
import java.sql.*;

interface StudentInfoConstants
{
	String firstname="FIRST NAME:";
	String middleName="MIDDLE NAME:";
	String lastName="LAST NAME:";
	String dob="DATA OF BIRTH:";
	String adhar="ADHAR-CARD NO:";
	String phone="PH";
	String address="ADDRESS:";
	String flat="FLAT/ROOM";
	String building="BUILDING";
	String street="STREET";
	String landMark="LANDMARK";
	String city="CITY";
	String pin="PINCODE";
	String next="NEXT";
	String back="BACK";
	String day="DD";
	String month="MM";
	String year="YYYY";
}

public class StudentInfoPanel extends JPanel implements StudentInfoConstants,FocusListener
{
	JLabel lblFirstName,lblMiddleName,lblLastName,lblDob,lblAdhar,lblPhone,lblAddress,lblFlat,lblBuilding,lblStreet,lblLandMark,lblCity,lblPin,lblDay,lblMonth,lblYear;
	MyTextField firstNameTxt,middleNameTxt,lastNameTxt,adharTxt,phoneTxt,flatTxt,buildingTxt,streetTxt,landMarkTxt,cityTxt,pinTxt;
	JButton nextBt,backBt;
	JSpinner spDay,spMonth,spYear;
	SpinnerNumberModel spmD,spmM;
	SpinnerListModel spmY;
	JFrame obj;
	String yearArr[]=new String[50];
	int enrollNum;	
	
	public StudentInfoPanel(JFrame ref)
	{
		ref=obj;
		setLayout(new GridLayout(18,3,10,4));
		initializeAll();
		createAndMakePanels();
		setBackground(new Color(204,204,204));
	}
	void initializeAll()
	{
		//NAME PANEL
		lblFirstName=new JLabel(firstname);
		lblMiddleName=new JLabel(middleName);
		lblLastName=new JLabel(lastName);
		firstNameTxt=new MyTextField("",10,Color.BLACK);
		firstNameTxt.addFocusListener(this);
		middleNameTxt=new MyTextField("",10,Color.BLACK);
		middleNameTxt.addFocusListener(this);
		lastNameTxt=new MyTextField("",10,Color.BLACK);
		lastNameTxt.addFocusListener(this);

		//DOB PANEL
		lblDob=new JLabel(dob);
		lblDay=new JLabel(day);
		lblMonth=new JLabel(month);
		lblYear=new JLabel(year);
		spmD=new SpinnerNumberModel(1,1,31,1);
		spmM=new SpinnerNumberModel(1,1,12,1);
		for (int i=1990,j=0;i<2017;i++,j++)
			yearArr[j]=new Integer(i).toString();
		spmY=new SpinnerListModel(yearArr);
		spDay=new JSpinner(spmD);
		spMonth=new JSpinner(spmM);
		spYear=new JSpinner(spmY);

		//ADHAR PANEL
		adharTxt=new MyTextField("",10,Color.BLACK);
		adharTxt.addFocusListener(this);
		lblAdhar=new JLabel(adhar);

		//PHONE PANEL
		lblPhone=new JLabel(phone);
		phoneTxt=new MyTextField("",10,Color.BLACK);
		phoneTxt.addFocusListener(this);

		//ADDRESS PANE
		lblAddress=new JLabel(address);
		lblFlat=new JLabel(flat);
		lblBuilding=new JLabel(building);
		lblStreet=new JLabel(street);
		lblLandMark=new JLabel(landMark);
		lblCity=new JLabel(city);
		lblPin=new JLabel(pin);
		flatTxt=new MyTextField("",10,Color.BLACK);
		flatTxt.addFocusListener(this);		
		buildingTxt=new MyTextField("",10,Color.BLACK);
		buildingTxt.addFocusListener(this);
		streetTxt=new MyTextField("",10,Color.BLACK);
		streetTxt.addFocusListener(this);
		landMarkTxt=new MyTextField("",10,Color.BLACK);
		landMarkTxt.addFocusListener(this);
		cityTxt=new MyTextField("",10,Color.BLACK);
		cityTxt.addFocusListener(this);		
		pinTxt=new MyTextField("",10,Color.BLACK);
		pinTxt.addFocusListener(this);		
	}
	public void focusGained(FocusEvent fe)
	{
		MyTextField mtf12=(MyTextField)fe.getSource();
		mtf12.changeColor(Color.BLUE);
	}
	public void focusLost(FocusEvent fe)
	{
		MyTextField mtf12=(MyTextField)fe.getSource();
		if(mtf12.getText().length()==0)
			mtf12.changeColor(Color.RED);
		else
			mtf12.changeColor(Color.GREEN);			
	}
	void createAndMakePanels()
	{
		add(lblLastName);
		add(lblFirstName);
		add(lblMiddleName);
		add(lastNameTxt);
		add(firstNameTxt);
		add(middleNameTxt);

		add(new JLabel(new ImageIcon("Line.png")));
		add(new JLabel(new ImageIcon("Line.png")));
		add(new JLabel(new ImageIcon("Line.png")));

		add(lblDob);
		add(new JLabel());
		add(new JLabel());
		add(lblDay);
		add(lblMonth);
		add(lblYear);
		add(spDay);
		add(spMonth);
		add(spYear);

		add(new JLabel(new ImageIcon("Line.png")));
		add(new JLabel(new ImageIcon("Line.png")));
		add(new JLabel(new ImageIcon("Line.png")));
		
		add(lblAdhar);
		add(new JLabel());
		add(new JLabel());
		add(adharTxt);
		add(new JLabel());
		add(new JLabel());

		add(new JLabel(new ImageIcon("Line.png")));
		add(new JLabel(new ImageIcon("Line.png")));
		add(new JLabel(new ImageIcon("Line.png")));

		add(lblPhone);
		add(new JLabel());
		add(new JLabel());
		add(phoneTxt);
		add(new JLabel());
		add(new JLabel());

		add(new JLabel(new ImageIcon("Line.png")));
		add(new JLabel(new ImageIcon("Line.png")));
		add(new JLabel(new ImageIcon("Line.png")));


		add(lblAddress);
		add(new JLabel());
		add(new JLabel());
		add(lblFlat);
		add(lblBuilding);
		add(lblStreet);
		add(flatTxt);
		add(buildingTxt);
		add(streetTxt);
		add(lblLandMark);
		add(lblCity);
		add(lblPin);
		add(landMarkTxt);
		add(cityTxt);
		add(pinTxt);
	}
	public Insets getInsets()
	{
		return new Insets(10,10,10,10);
	}
	public boolean validateStudent()
	{
		if(firstNameTxt.getText().length()>0 && middleNameTxt.getText().length()>0 && lastNameTxt.getText().length()>0 && adharTxt.getText().length()>0 && phoneTxt.getText().length()>0 && flatTxt.getText().length()>0 && buildingTxt.getText().length()>0 && streetTxt.getText().length()>0 && landMarkTxt.getText().length()>0 && cityTxt.getText().length()>0 && pinTxt.getText().length()>0)
			return true;
		else
			return false;
	}
	public void insertInDB()
	{
		System.out.println("Adding in Stduent");
		try
		{
			Connection con=DriverManager.getConnection("jdbc:odbc:StudentDB");
		PreparedStatement ps=con.prepareStatement("insert into Student values (?,?,?,?,?,?)");
		ps.setString(1,""+EntryPanel.enroll);
		ps.setString(2,lastNameTxt.getText());
		ps.setString(3,firstNameTxt.getText());
		ps.setString(4,middleNameTxt.getText());
		String s1=(spDay.getValue().toString())+"/"+(spMonth.getValue().toString())+"/"+(spYear.getValue().toString());
		ps.setString(5,s1);
		ps.setString(6,adharTxt.getText());	
		ps.close();
		con.close();
		}
		catch (Exception s)
		{
		}
		finally
		{
		}
				System.out.println("Added in Stduent");
	}
	public void setEnrollNum(int num)
	{
		enrollNum=num;
	}
}